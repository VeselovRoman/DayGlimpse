name: Deploy to VM

on:
  push:
    tags:
      - '*'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Установка .NET SDK для серверной части
      - name: Set up .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '8.0.x'

      # Установка Node.js для клиентской части
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.11.1'  # Укажите версию Node.js

      # Сборка и публикация серверной части
      - name: Restore .NET dependencies
        run: dotnet restore

      - name: Build .NET project
        run: dotnet build --configuration Release --no-restore

      - name: Publish .NET project
        run: dotnet publish --configuration Release

      # Сборка и публикация клиентской части
      - name: Install dependencies for Angular
        run: npm install
        working-directory: ./frontend

      - name: Build Angular project
        run: npx ng build --configuration production
        working-directory: ./frontend  # Укажите путь к вашему клиентскому приложению

      # Деплой серверной части
      - name: Deploy .NET to VM
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USERNAME }}
          key: ${{ secrets.VM_PRIVATE_KEY }}
          source: 'server/bin/Release/net8.0/publish/*'
          target: '/var/www/server'
          strip_components: 4
          port: 22

      # Деплой клиентской части
      - name: Deploy Angular to VM
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USERNAME }}
          key: ${{ secrets.VM_PRIVATE_KEY }}
          source: 'frontend/dist/client/*'
          target: '/var/www/html'

      # Выполнение SSH команд на сервере
      - name: Run SSH commands
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USERNAME }}
          key: ${{ secrets.VM_PRIVATE_KEY }}
          script: |
            sudo systemctl stop server.service
            cd /var/www/server
            dotnet ef database update
            sudo systemctl start server.service
          port: 22
